{
  "id": "button",
  "name": "Button",
  "status": "alpha",
  "a11yReviewed": false,
  "stories": [],
  "props": [
    {
      "name": "children",
      "required": true,
      "type": "React.ReactNode",
      "description": "The content of the button."
    },
    {
      "name": "count",
      "required": true,
      "type": "number | string",
      "description": "For counter buttons, the number to display."
    },
    {
      "name": "variant",
      "type": "'default'\n| 'primary'\n| 'danger'\n| 'invisible'",
      "defaultValue": "'default'",
      "description": "Change the visual style of the button."
    },
    {
      "name": "size",
      "type": "'small'\n| 'medium'\n| 'large'",
      "defaultValue": "'medium'"
    },
    {
      "name": "leadingIcon",
      "type": "React.ComponentType<OcticonProps>",
      "description": "An icon to display before the button text.",
      "deprecated": true
    },
    {
      "name": "leadingVisual",
      "type": "React.ElementType",
      "description": "A visual to display before the button text."
    },
    {
      "name": "trailingIcon",
      "type": "React.ComponentType<OcticonProps>",
      "description": "An icon to display after the button text.",
      "deprecated": true
    },
    {
      "name": "trailingVisual",
      "type": "React.ElementType",
      "description": "A visual to display after the button text."
    },
    {
      "name": "inactive",
      "type": "boolean",
      "description": "Whether the button looks visually disabled, but can still accept all the same interactions as an enabled button.\n This is intended to be used when a system error such as an outage prevents the button from performing its usual action.\n Inactive styles are slightly different from disabled styles because inactive buttons need to have an accessible color contrast ratio. This is because inactive buttons can have tooltips or perform an action such as opening a dialog explaining why it's inactive.\n If both `disabled` and `inactive` are true, `disabled` takes precedence."
    },
    {
      "name": "as",
      "type": "React.ElementType",
      "defaultValue": "'button'"
    },
    {
      "name": "sx",
      "type": "SystemStyleObject"
    },
    {
      "name": "ref",
      "type": "React.RefObject<HTMLButtonElement>"
    }
  ],
  "passthrough": {
    "element": "button",
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attributes"
  }
}
