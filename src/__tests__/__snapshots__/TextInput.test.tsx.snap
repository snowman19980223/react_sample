// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput renders 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders block 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders consistently 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders contrast 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-color: #f6f8fa;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders error 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  border-color: #cf222e;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders large 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  --inner-action-size: 28px;
  padding-left: 8px;
  padding-right: 8px;
  padding-top: 10px;
  padding-bottom: 10px;
  height: 40px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
  size="large"
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders leadingVisual 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <span
    className="TextInput-icon"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-search"
      fill="currentColor"
      focusable="false"
      height={16}
      role="img"
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 16 16"
      width={16}
    >
      <path
        d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
      />
    </svg>
  </span>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
</span>
`;

exports[`TextInput renders leadingVisual 2`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <span
    className="TextInput-icon"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-search"
      fill="currentColor"
      focusable="false"
      height={16}
      role="img"
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 16 16"
      width={16}
    >
      <path
        d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
      />
    </svg>
  </span>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
</span>
`;

exports[`TextInput renders leadingVisual 3`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <span
    className="TextInput-icon"
  >
    <div>
      Trailing
    </div>
  </span>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
</span>
`;

exports[`TextInput renders leadingVisual 4`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <span
    className="TextInput-icon"
  >
    <div>
      Trailing
    </div>
  </span>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
</span>
`;

exports[`TextInput renders monospace 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  font-family: SFMono-Regular,Consolas,"Liberation Mono",Menlo,Courier,monospace;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders placeholder 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="560076"
    type="text"
  />
</span>
`;

exports[`TextInput renders small 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  --inner-action-size: 20px;
  min-height: 28px;
  padding-left: 8px;
  padding-right: 8px;
  padding-top: 3px;
  padding-bottom: 3px;
  font-size: 12px;
  line-height: 20px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
  size="small"
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders trailingAction icon button 1`] = `
.c2 {
  margin-left: 4px;
  margin-right: 4px;
  line-height: 0;
}

.c4 {
  border-radius: 6px;
  border: 1px solid;
  border-color: transparent;
  font-family: inherit;
  font-weight: 500;
  font-size: 14px;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  height: 32px;
  padding: 0 12px;
  gap: 8px;
  min-width: -webkit-max-content;
  min-width: -moz-max-content;
  min-width: max-content;
  -webkit-transition: 80ms cubic-bezier(0.65,0,0.35,1);
  transition: 80ms cubic-bezier(0.65,0,0.35,1);
  -webkit-transition-property: color,fill,background-color,border-color;
  transition-property: color,fill,background-color,border-color;
  color: #0969da;
  background-color: transparent;
  box-shadow: none;
}

.c4:focus:not(:disabled) {
  box-shadow: none;
  outline: 2px solid #0969da;
  outline-offset: -2px;
}

.c4:focus:not(:disabled):not(:focus-visible) {
  outline: solid 1px transparent;
}

.c4:focus-visible:not(:disabled) {
  box-shadow: none;
  outline: 2px solid #0969da;
  outline-offset: -2px;
}

.c4[href] {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c4[href]:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c4:hover {
  -webkit-transition-duration: 80ms;
  transition-duration: 80ms;
}

.c4:active {
  -webkit-transition: none;
  transition: none;
}

.c4:disabled {
  cursor: not-allowed;
  box-shadow: none;
  color: #8c959f;
}

.c4:disabled [data-component=ButtonCounter],
.c4:disabled [data-component="leadingVisual"],
.c4:disabled [data-component="trailingAction"] {
  color: inherit;
}

.c4 [data-component=ButtonCounter] {
  font-size: 12px;
}

.c4[data-component=IconButton] {
  display: inline-grid;
  padding: unset;
  place-content: center;
  width: 32px;
  min-width: unset;
}

.c4[data-size="small"] {
  padding: 0 8px;
  height: 28px;
  gap: 4px;
  font-size: 12px;
}

.c4[data-size="small"] [data-component="text"] {
  line-height: calc(20 / 12);
}

.c4[data-size="small"] [data-component=ButtonCounter] {
  font-size: 12px;
}

.c4[data-size="small"] [data-component="buttonContent"] > :not(:last-child) {
  margin-right: 4px;
}

.c4[data-size="small"][data-component=IconButton] {
  width: 28px;
  padding: unset;
}

.c4[data-size="large"] {
  padding: 0 16px;
  height: 40px;
  gap: 8px;
}

.c4[data-size="large"] [data-component="buttonContent"] > :not(:last-child) {
  margin-right: 8px;
}

.c4[data-size="large"][data-component=IconButton] {
  width: 40px;
  padding: unset;
}

.c4[data-block="block"] {
  width: 100%;
}

.c4 [data-component="leadingVisual"] {
  grid-area: leadingVisual;
  color: #656d76;
}

.c4 [data-component="text"] {
  grid-area: text;
  line-height: calc(20/14);
  white-space: nowrap;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c4 [data-component="trailingVisual"] {
  grid-area: trailingVisual;
}

.c4 [data-component="trailingAction"] {
  margin-right: -4px;
  color: #656d76;
}

.c4 [data-component="buttonContent"] {
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  display: grid;
  grid-template-areas: "leadingVisual text trailingVisual";
  grid-template-columns: min-content minmax(0,auto) min-content;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
}

.c4 [data-component="buttonContent"] > :not(:last-child) {
  margin-right: 8px;
}

.c4:hover:not([disabled]) {
  background-color: #f3f4f6;
}

.c4:active:not([disabled]) {
  background-color: hsla(220,14%,94%,1);
}

.c4[aria-expanded=true] {
  background-color: hsla(220,14%,94%,1);
}

.c4[data-component="IconButton"][data-no-visuals] {
  color: #656d76;
}

.c4[data-no-visuals] {
  color: #0969da;
}

.c4:has([data-component="ButtonCounter"]) {
  color: #0969da;
}

.c4:disabled[data-no-visuals] {
  color: #8c959f;
}

.c4:disabled[data-no-visuals] [data-component=ButtonCounter] {
  color: inherit;
}

.c4[data-size="small"][data-no-visuals="true"] {
  padding-top: 2px;
  padding-right: 4px;
  padding-bottom: 2px;
  padding-left: 4px;
  position: relative;
}

.c4[data-size="small"][data-no-visuals="true"][data-component="IconButton"] {
  width: var(--inner-action-size);
  height: var(--inner-action-size);
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c3 {
  position: relative;
}

.c3::before {
  position: absolute;
  z-index: 1000001;
  display: none;
  width: 0px;
  height: 0px;
  color: #24292f;
  pointer-events: none;
  content: '';
  border: 6px solid transparent;
  opacity: 0;
}

.c3::after {
  position: absolute;
  z-index: 1000000;
  display: none;
  padding: 0.5em 0.75em;
  font: normal normal 11px/1.5 -apple-system,BlinkMacSystemFont,"Segoe UI","Noto Sans",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji";
  -webkit-font-smoothing: subpixel-antialiased;
  color: #ffffff;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  word-wrap: break-word;
  white-space: pre;
  pointer-events: none;
  content: attr(aria-label);
  background: #24292f;
  border-radius: 3px;
  opacity: 0;
}

.c3:hover::before,
.c3:active::before,
.c3:focus::before,
.c3:focus-within::before,
.c3:hover::after,
.c3:active::after,
.c3:focus::after,
.c3:focus-within::after {
  display: inline-block;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-animation-name: tooltip-appear;
  animation-name: tooltip-appear;
  -webkit-animation-duration: 0.1s;
  animation-duration: 0.1s;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
  -webkit-animation-timing-function: ease-in;
  animation-timing-function: ease-in;
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.c3.tooltipped-no-delay:hover::before,
.c3.tooltipped-no-delay:active::before,
.c3.tooltipped-no-delay:focus::before,
.c3.tooltipped-no-delay:focus-within::before,
.c3.tooltipped-no-delay:hover::after,
.c3.tooltipped-no-delay:active::after,
.c3.tooltipped-no-delay:focus::after,
.c3.tooltipped-no-delay:focus-within::after {
  -webkit-animation-delay: 0s;
  animation-delay: 0s;
}

.c3.tooltipped-multiline:hover::after,
.c3.tooltipped-multiline:active::after,
.c3.tooltipped-multiline:focus::after,
.c3.tooltipped-multiline:focus-within::after {
  display: table-cell;
}

.c3.tooltipped-s::after,
.c3.tooltipped-se::after,
.c3.tooltipped-sw::after {
  top: 100%;
  right: 50%;
  margin-top: 6px;
}

.c3.tooltipped-s::before,
.c3.tooltipped-se::before,
.c3.tooltipped-sw::before {
  top: auto;
  right: 50%;
  bottom: -7px;
  margin-right: -6px;
  border-bottom-color: #24292f;
}

.c3.tooltipped-se::after {
  right: auto;
  left: 50%;
  margin-left: -16px;
}

.c3.tooltipped-sw::after {
  margin-right: -16px;
}

.c3.tooltipped-n::after,
.c3.tooltipped-ne::after,
.c3.tooltipped-nw::after {
  right: 50%;
  bottom: 100%;
  margin-bottom: 6px;
}

.c3.tooltipped-n::before,
.c3.tooltipped-ne::before,
.c3.tooltipped-nw::before {
  top: -7px;
  right: 50%;
  bottom: auto;
  margin-right: -6px;
  border-top-color: #24292f;
}

.c3.tooltipped-ne::after {
  right: auto;
  left: 50%;
  margin-left: -16px;
}

.c3.tooltipped-nw::after {
  margin-right: -16px;
}

.c3.tooltipped-s::after,
.c3.tooltipped-n::after {
  -webkit-transform: translateX(50%);
  -ms-transform: translateX(50%);
  transform: translateX(50%);
}

.c3.tooltipped-w::after {
  right: 100%;
  bottom: 50%;
  margin-right: 6px;
  -webkit-transform: translateY(50%);
  -ms-transform: translateY(50%);
  transform: translateY(50%);
}

.c3.tooltipped-w::before {
  top: 50%;
  bottom: 50%;
  left: -7px;
  margin-top: -6px;
  border-left-color: #24292f;
}

.c3.tooltipped-e::after {
  bottom: 50%;
  left: 100%;
  margin-left: 6px;
  -webkit-transform: translateY(50%);
  -ms-transform: translateY(50%);
  transform: translateY(50%);
}

.c3.tooltipped-e::before {
  top: 50%;
  right: -7px;
  bottom: 50%;
  margin-top: -6px;
  border-right-color: #24292f;
}

.c3.tooltipped-multiline::after {
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  max-width: 250px;
  word-wrap: break-word;
  white-space: pre-line;
  border-collapse: separate;
}

.c3.tooltipped-multiline.tooltipped-s::after,
.c3.tooltipped-multiline.tooltipped-n::after {
  right: auto;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
}

.c3.tooltipped-multiline.tooltipped-w::after,
.c3.tooltipped-multiline.tooltipped-e::after {
  right: 100%;
}

.c3.tooltipped-align-right-2::after {
  right: 0;
  margin-right: 0;
}

.c3.tooltipped-align-right-2::before {
  right: 15px;
}

.c3.tooltipped-align-left-2::after {
  left: 0;
  margin-left: 0;
}

.c3.tooltipped-align-left-2::before {
  left: 10px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (forced-colors:active) {
  .c4:focus {
    outline: solid 1px transparent;
  }
}

@media (pointer:coarse) {
  .c4[data-size="small"][data-no-visuals="true"]:after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    top: 50%;
    min-height: 44px;
  }
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
  <span
    className="c2 TextInput-action"
  >
    <span
      aria-label="Icon label"
      className="c3 tooltipped-n"
      role="tooltip"
    >
      <button
        aria-label="Icon label"
        className="c4"
        data-block={null}
        data-component="IconButton"
        data-no-visuals={true}
        data-size="small"
        onClick={[MockFunction]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="octicon octicon-search"
          fill="currentColor"
          focusable="false"
          height={16}
          role="img"
          style={
            {
              "display": "inline-block",
              "overflow": "visible",
              "userSelect": "none",
              "verticalAlign": "text-bottom",
            }
          }
          viewBox="0 0 16 16"
          width={16}
        >
          <path
            d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
          />
        </svg>
      </button>
    </span>
  </span>
</span>
`;

exports[`TextInput renders trailingAction text button 1`] = `
.c2 {
  margin-left: 4px;
  margin-right: 4px;
  line-height: 0;
}

.c4 {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c3 {
  border-radius: 6px;
  border: 1px solid;
  border-color: transparent;
  font-family: inherit;
  font-weight: 500;
  font-size: 14px;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  height: 32px;
  padding: 0 12px;
  gap: 8px;
  min-width: -webkit-max-content;
  min-width: -moz-max-content;
  min-width: max-content;
  -webkit-transition: 80ms cubic-bezier(0.65,0,0.35,1);
  transition: 80ms cubic-bezier(0.65,0,0.35,1);
  -webkit-transition-property: color,fill,background-color,border-color;
  transition-property: color,fill,background-color,border-color;
  color: #0969da;
  background-color: transparent;
  box-shadow: none;
}

.c3:focus:not(:disabled) {
  box-shadow: none;
  outline: 2px solid #0969da;
  outline-offset: -2px;
}

.c3:focus:not(:disabled):not(:focus-visible) {
  outline: solid 1px transparent;
}

.c3:focus-visible:not(:disabled) {
  box-shadow: none;
  outline: 2px solid #0969da;
  outline-offset: -2px;
}

.c3[href] {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c3[href]:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c3:hover {
  -webkit-transition-duration: 80ms;
  transition-duration: 80ms;
}

.c3:active {
  -webkit-transition: none;
  transition: none;
}

.c3:disabled {
  cursor: not-allowed;
  box-shadow: none;
  color: #8c959f;
}

.c3:disabled [data-component=ButtonCounter],
.c3:disabled [data-component="leadingVisual"],
.c3:disabled [data-component="trailingAction"] {
  color: inherit;
}

.c3 [data-component=ButtonCounter] {
  font-size: 12px;
}

.c3[data-component=IconButton] {
  display: inline-grid;
  padding: unset;
  place-content: center;
  width: 32px;
  min-width: unset;
}

.c3[data-size="small"] {
  padding: 0 8px;
  height: 28px;
  gap: 4px;
  font-size: 12px;
}

.c3[data-size="small"] [data-component="text"] {
  line-height: calc(20 / 12);
}

.c3[data-size="small"] [data-component=ButtonCounter] {
  font-size: 12px;
}

.c3[data-size="small"] [data-component="buttonContent"] > :not(:last-child) {
  margin-right: 4px;
}

.c3[data-size="small"][data-component=IconButton] {
  width: 28px;
  padding: unset;
}

.c3[data-size="large"] {
  padding: 0 16px;
  height: 40px;
  gap: 8px;
}

.c3[data-size="large"] [data-component="buttonContent"] > :not(:last-child) {
  margin-right: 8px;
}

.c3[data-size="large"][data-component=IconButton] {
  width: 40px;
  padding: unset;
}

.c3[data-block="block"] {
  width: 100%;
}

.c3 [data-component="leadingVisual"] {
  grid-area: leadingVisual;
  color: #656d76;
}

.c3 [data-component="text"] {
  grid-area: text;
  line-height: calc(20/14);
  white-space: nowrap;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 [data-component="trailingVisual"] {
  grid-area: trailingVisual;
}

.c3 [data-component="trailingAction"] {
  margin-right: -4px;
  color: #656d76;
}

.c3 [data-component="buttonContent"] {
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  display: grid;
  grid-template-areas: "leadingVisual text trailingVisual";
  grid-template-columns: min-content minmax(0,auto) min-content;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
}

.c3 [data-component="buttonContent"] > :not(:last-child) {
  margin-right: 8px;
}

.c3:hover:not([disabled]) {
  background-color: #f3f4f6;
}

.c3:active:not([disabled]) {
  background-color: hsla(220,14%,94%,1);
}

.c3[aria-expanded=true] {
  background-color: hsla(220,14%,94%,1);
}

.c3[data-component="IconButton"][data-no-visuals] {
  color: #656d76;
}

.c3[data-no-visuals] {
  color: #0969da;
}

.c3:has([data-component="ButtonCounter"]) {
  color: #0969da;
}

.c3:disabled[data-no-visuals] {
  color: #8c959f;
}

.c3:disabled[data-no-visuals] [data-component=ButtonCounter] {
  color: inherit;
}

.c3[data-no-visuals="true"] {
  padding-top: 2px;
  padding-right: 4px;
  padding-bottom: 2px;
  padding-left: 4px;
  position: relative;
}

.c3[data-no-visuals="true"][data-component="IconButton"] {
  width: var(--inner-action-size);
  height: var(--inner-action-size);
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (forced-colors:active) {
  .c3:focus {
    outline: solid 1px transparent;
  }
}

@media (pointer:coarse) {
  .c3[data-no-visuals="true"]:after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    top: 50%;
    min-height: 44px;
  }
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
  <span
    className="c2 TextInput-action"
  >
    <button
      className="c3"
      data-block={null}
      data-no-visuals={true}
      onClick={[MockFunction]}
      type="button"
    >
      <span
        className="c4"
        data-component="buttonContent"
      >
        <span
          data-component="text"
        >
          Clear
        </span>
      </span>
    </button>
  </span>
</span>
`;

exports[`TextInput renders trailingAction text button with a tooltip 1`] = `
.c2 {
  margin-left: 4px;
  margin-right: 4px;
  line-height: 0;
}

.c5 {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c4 {
  border-radius: 6px;
  border: 1px solid;
  border-color: transparent;
  font-family: inherit;
  font-weight: 500;
  font-size: 14px;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  height: 32px;
  padding: 0 12px;
  gap: 8px;
  min-width: -webkit-max-content;
  min-width: -moz-max-content;
  min-width: max-content;
  -webkit-transition: 80ms cubic-bezier(0.65,0,0.35,1);
  transition: 80ms cubic-bezier(0.65,0,0.35,1);
  -webkit-transition-property: color,fill,background-color,border-color;
  transition-property: color,fill,background-color,border-color;
  color: #0969da;
  background-color: transparent;
  box-shadow: none;
}

.c4:focus:not(:disabled) {
  box-shadow: none;
  outline: 2px solid #0969da;
  outline-offset: -2px;
}

.c4:focus:not(:disabled):not(:focus-visible) {
  outline: solid 1px transparent;
}

.c4:focus-visible:not(:disabled) {
  box-shadow: none;
  outline: 2px solid #0969da;
  outline-offset: -2px;
}

.c4[href] {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c4[href]:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c4:hover {
  -webkit-transition-duration: 80ms;
  transition-duration: 80ms;
}

.c4:active {
  -webkit-transition: none;
  transition: none;
}

.c4:disabled {
  cursor: not-allowed;
  box-shadow: none;
  color: #8c959f;
}

.c4:disabled [data-component=ButtonCounter],
.c4:disabled [data-component="leadingVisual"],
.c4:disabled [data-component="trailingAction"] {
  color: inherit;
}

.c4 [data-component=ButtonCounter] {
  font-size: 12px;
}

.c4[data-component=IconButton] {
  display: inline-grid;
  padding: unset;
  place-content: center;
  width: 32px;
  min-width: unset;
}

.c4[data-size="small"] {
  padding: 0 8px;
  height: 28px;
  gap: 4px;
  font-size: 12px;
}

.c4[data-size="small"] [data-component="text"] {
  line-height: calc(20 / 12);
}

.c4[data-size="small"] [data-component=ButtonCounter] {
  font-size: 12px;
}

.c4[data-size="small"] [data-component="buttonContent"] > :not(:last-child) {
  margin-right: 4px;
}

.c4[data-size="small"][data-component=IconButton] {
  width: 28px;
  padding: unset;
}

.c4[data-size="large"] {
  padding: 0 16px;
  height: 40px;
  gap: 8px;
}

.c4[data-size="large"] [data-component="buttonContent"] > :not(:last-child) {
  margin-right: 8px;
}

.c4[data-size="large"][data-component=IconButton] {
  width: 40px;
  padding: unset;
}

.c4[data-block="block"] {
  width: 100%;
}

.c4 [data-component="leadingVisual"] {
  grid-area: leadingVisual;
  color: #656d76;
}

.c4 [data-component="text"] {
  grid-area: text;
  line-height: calc(20/14);
  white-space: nowrap;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c4 [data-component="trailingVisual"] {
  grid-area: trailingVisual;
}

.c4 [data-component="trailingAction"] {
  margin-right: -4px;
  color: #656d76;
}

.c4 [data-component="buttonContent"] {
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  display: grid;
  grid-template-areas: "leadingVisual text trailingVisual";
  grid-template-columns: min-content minmax(0,auto) min-content;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
}

.c4 [data-component="buttonContent"] > :not(:last-child) {
  margin-right: 8px;
}

.c4:hover:not([disabled]) {
  background-color: #f3f4f6;
}

.c4:active:not([disabled]) {
  background-color: hsla(220,14%,94%,1);
}

.c4[aria-expanded=true] {
  background-color: hsla(220,14%,94%,1);
}

.c4[data-component="IconButton"][data-no-visuals] {
  color: #656d76;
}

.c4[data-no-visuals] {
  color: #0969da;
}

.c4:has([data-component="ButtonCounter"]) {
  color: #0969da;
}

.c4:disabled[data-no-visuals] {
  color: #8c959f;
}

.c4:disabled[data-no-visuals] [data-component=ButtonCounter] {
  color: inherit;
}

.c4[data-no-visuals="true"] {
  padding-top: 2px;
  padding-right: 4px;
  padding-bottom: 2px;
  padding-left: 4px;
  position: relative;
}

.c4[data-no-visuals="true"][data-component="IconButton"] {
  width: var(--inner-action-size);
  height: var(--inner-action-size);
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c3 {
  position: relative;
  display: inline-block;
}

.c3::before {
  position: absolute;
  z-index: 1000001;
  display: none;
  width: 0px;
  height: 0px;
  color: #24292f;
  pointer-events: none;
  content: '';
  border: 6px solid transparent;
  opacity: 0;
}

.c3::after {
  position: absolute;
  z-index: 1000000;
  display: none;
  padding: 0.5em 0.75em;
  font: normal normal 11px/1.5 -apple-system,BlinkMacSystemFont,"Segoe UI","Noto Sans",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji";
  -webkit-font-smoothing: subpixel-antialiased;
  color: #ffffff;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  word-wrap: break-word;
  white-space: pre;
  pointer-events: none;
  content: attr(aria-label);
  background: #24292f;
  border-radius: 3px;
  opacity: 0;
}

.c3:hover::before,
.c3:active::before,
.c3:focus::before,
.c3:focus-within::before,
.c3:hover::after,
.c3:active::after,
.c3:focus::after,
.c3:focus-within::after {
  display: inline-block;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-animation-name: tooltip-appear;
  animation-name: tooltip-appear;
  -webkit-animation-duration: 0.1s;
  animation-duration: 0.1s;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
  -webkit-animation-timing-function: ease-in;
  animation-timing-function: ease-in;
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.c3.tooltipped-no-delay:hover::before,
.c3.tooltipped-no-delay:active::before,
.c3.tooltipped-no-delay:focus::before,
.c3.tooltipped-no-delay:focus-within::before,
.c3.tooltipped-no-delay:hover::after,
.c3.tooltipped-no-delay:active::after,
.c3.tooltipped-no-delay:focus::after,
.c3.tooltipped-no-delay:focus-within::after {
  -webkit-animation-delay: 0s;
  animation-delay: 0s;
}

.c3.tooltipped-multiline:hover::after,
.c3.tooltipped-multiline:active::after,
.c3.tooltipped-multiline:focus::after,
.c3.tooltipped-multiline:focus-within::after {
  display: table-cell;
}

.c3.tooltipped-s::after,
.c3.tooltipped-se::after,
.c3.tooltipped-sw::after {
  top: 100%;
  right: 50%;
  margin-top: 6px;
}

.c3.tooltipped-s::before,
.c3.tooltipped-se::before,
.c3.tooltipped-sw::before {
  top: auto;
  right: 50%;
  bottom: -7px;
  margin-right: -6px;
  border-bottom-color: #24292f;
}

.c3.tooltipped-se::after {
  right: auto;
  left: 50%;
  margin-left: -16px;
}

.c3.tooltipped-sw::after {
  margin-right: -16px;
}

.c3.tooltipped-n::after,
.c3.tooltipped-ne::after,
.c3.tooltipped-nw::after {
  right: 50%;
  bottom: 100%;
  margin-bottom: 6px;
}

.c3.tooltipped-n::before,
.c3.tooltipped-ne::before,
.c3.tooltipped-nw::before {
  top: -7px;
  right: 50%;
  bottom: auto;
  margin-right: -6px;
  border-top-color: #24292f;
}

.c3.tooltipped-ne::after {
  right: auto;
  left: 50%;
  margin-left: -16px;
}

.c3.tooltipped-nw::after {
  margin-right: -16px;
}

.c3.tooltipped-s::after,
.c3.tooltipped-n::after {
  -webkit-transform: translateX(50%);
  -ms-transform: translateX(50%);
  transform: translateX(50%);
}

.c3.tooltipped-w::after {
  right: 100%;
  bottom: 50%;
  margin-right: 6px;
  -webkit-transform: translateY(50%);
  -ms-transform: translateY(50%);
  transform: translateY(50%);
}

.c3.tooltipped-w::before {
  top: 50%;
  bottom: 50%;
  left: -7px;
  margin-top: -6px;
  border-left-color: #24292f;
}

.c3.tooltipped-e::after {
  bottom: 50%;
  left: 100%;
  margin-left: 6px;
  -webkit-transform: translateY(50%);
  -ms-transform: translateY(50%);
  transform: translateY(50%);
}

.c3.tooltipped-e::before {
  top: 50%;
  right: -7px;
  bottom: 50%;
  margin-top: -6px;
  border-right-color: #24292f;
}

.c3.tooltipped-multiline::after {
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  max-width: 250px;
  word-wrap: break-word;
  white-space: pre-line;
  border-collapse: separate;
}

.c3.tooltipped-multiline.tooltipped-s::after,
.c3.tooltipped-multiline.tooltipped-n::after {
  right: auto;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
}

.c3.tooltipped-multiline.tooltipped-w::after,
.c3.tooltipped-multiline.tooltipped-e::after {
  right: 100%;
}

.c3.tooltipped-align-right-2::after {
  right: 0;
  margin-right: 0;
}

.c3.tooltipped-align-right-2::before {
  right: 15px;
}

.c3.tooltipped-align-left-2::after {
  left: 0;
  margin-left: 0;
}

.c3.tooltipped-align-left-2::before {
  left: 10px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (forced-colors:active) {
  .c4:focus {
    outline: solid 1px transparent;
  }
}

@media (pointer:coarse) {
  .c4[data-no-visuals="true"]:after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    top: 50%;
    min-height: 44px;
  }
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
  <span
    className="c2 TextInput-action"
  >
    <span
      aria-label="Clear input"
      className="c3 tooltipped-n"
      role="tooltip"
    >
      <button
        className="c4"
        data-block={null}
        data-no-visuals={true}
        onClick={[MockFunction]}
        type="button"
      >
        <span
          className="c5"
          data-component="buttonContent"
        >
          <span
            data-component="text"
          >
            Clear
          </span>
        </span>
      </button>
    </span>
  </span>
</span>
`;

exports[`TextInput renders trailingVisual 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
  <span
    className="TextInput-icon"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-search"
      fill="currentColor"
      focusable="false"
      height={16}
      role="img"
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 16 16"
      width={16}
    >
      <path
        d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
      />
    </svg>
  </span>
</span>
`;

exports[`TextInput renders trailingVisual 2`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
  <span
    className="TextInput-icon"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-search"
      fill="currentColor"
      focusable="false"
      height={16}
      role="img"
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 16 16"
      width={16}
    >
      <path
        d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
      />
    </svg>
  </span>
</span>
`;

exports[`TextInput renders trailingVisual 3`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
  <span
    className="TextInput-icon"
  >
    <div>
      Trailing
    </div>
  </span>
</span>
`;

exports[`TextInput renders trailingVisual 4`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
  <span
    className="TextInput-icon"
  >
    <div>
      Trailing
    </div>
  </span>
</span>
`;

exports[`TextInput renders warning 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
  border-color: #9a6700;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders with a loading indicator 1`] = `
[
  .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: visible;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <input
      className="c1"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c2"
        display="flex"
      >
        <svg
          className="c3"
          fill="none"
          height="16px"
          sx={
            {
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c2 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: visible;
}

.c4 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: hidden;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 12px;
}

.c3 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c3:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <svg
          className="c2"
          fill="none"
          height="16px"
          sx={
            {
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c3"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <svg
          className="c4"
          fill="none"
          height="16px"
          sx={
            {
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: visible;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <input
      className="c1"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c2"
        display="flex"
      >
        <svg
          className="c3"
          fill="none"
          height="16px"
          sx={
            {
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c2 {
  visibility: hidden;
}

.c5 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: hidden;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  left: 0;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 12px;
}

.c4 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c4:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c2"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            fill="currentColor"
            focusable="false"
            height={16}
            role="img"
            style={
              {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          >
            <path
              d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
            />
          </svg>
        </div>
        <svg
          className="c3"
          fill="none"
          height="32px"
          sx={
            {
              "height": "100%",
              "left": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c4"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <svg
          className="c5"
          fill="none"
          height="16px"
          sx={
            {
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c2 {
  visibility: hidden;
}

.c5 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: hidden;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  left: 0;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 12px;
}

.c4 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c4:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c2"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            fill="currentColor"
            focusable="false"
            height={16}
            role="img"
            style={
              {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          >
            <path
              d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
            />
          </svg>
        </div>
        <svg
          className="c3"
          fill="none"
          height="32px"
          sx={
            {
              "height": "100%",
              "left": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c4"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <svg
          className="c5"
          fill="none"
          height="16px"
          sx={
            {
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c2 {
  visibility: visible;
}

.c5 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: visible;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: hidden;
  left: 0;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 0;
}

.c4 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c4:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c2"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            fill="currentColor"
            focusable="false"
            height={16}
            role="img"
            style={
              {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          >
            <path
              d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
            />
          </svg>
        </div>
        <svg
          className="c3"
          fill="none"
          height="32px"
          sx={
            {
              "height": "100%",
              "left": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "top": 0,
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c4"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <svg
          className="c5"
          fill="none"
          height="16px"
          sx={
            {
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c3 {
  visibility: hidden;
}

.c4 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  right: 0;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <input
      className="c1"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c2"
        display="flex"
      >
        <div
          className="c3"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            fill="currentColor"
            focusable="false"
            height={16}
            role="img"
            style={
              {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          >
            <path
              d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
            />
          </svg>
        </div>
        <svg
          className="c4"
          fill="none"
          height="32px"
          sx={
            {
              "height": "100%",
              "maxWidth": "100%",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c4 {
  visibility: visible;
}

.c2 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: visible;
}

.c5 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: hidden;
  right: 0;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 0;
}

.c3 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c3:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <svg
          className="c2"
          fill="none"
          height="16px"
          sx={
            {
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c3"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c4"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            fill="currentColor"
            focusable="false"
            height={16}
            role="img"
            style={
              {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          >
            <path
              d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
            />
          </svg>
        </div>
        <svg
          className="c5"
          fill="none"
          height="32px"
          sx={
            {
              "height": "100%",
              "maxWidth": "100%",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c3 {
  visibility: hidden;
}

.c4 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  right: 0;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <input
      className="c1"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c2"
        display="flex"
      >
        <div
          className="c3"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            fill="currentColor"
            focusable="false"
            height={16}
            role="img"
            style={
              {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          >
            <path
              d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
            />
          </svg>
        </div>
        <svg
          className="c4"
          fill="none"
          height="32px"
          sx={
            {
              "height": "100%",
              "maxWidth": "100%",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c2 {
  visibility: hidden;
}

.c5 {
  visibility: visible;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  left: 0;
}

.c6 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: hidden;
  right: 0;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  --inner-action-size: 20px;
  min-height: 28px;
  padding-left: 8px;
  padding-right: 8px;
  padding-top: 3px;
  padding-bottom: 3px;
  font-size: 12px;
  line-height: 20px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 0;
}

.c4 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c4:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    className="c0 TextInput-wrapper"
    onClick={[Function]}
    size="small"
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c2"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            fill="currentColor"
            focusable="false"
            height={16}
            role="img"
            style={
              {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          >
            <path
              d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
            />
          </svg>
        </div>
        <svg
          className="c3"
          fill="none"
          height="32px"
          sx={
            {
              "height": "100%",
              "left": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c4"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c5"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            fill="currentColor"
            focusable="false"
            height={16}
            role="img"
            style={
              {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          >
            <path
              d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
            />
          </svg>
        </div>
        <svg
          className="c6"
          fill="none"
          height="32px"
          sx={
            {
              "height": "100%",
              "maxWidth": "100%",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c2 {
  visibility: hidden;
}

.c5 {
  visibility: visible;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  left: 0;
}

.c6 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: hidden;
  right: 0;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 0;
}

.c4 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c4:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c2"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            fill="currentColor"
            focusable="false"
            height={16}
            role="img"
            style={
              {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          >
            <path
              d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
            />
          </svg>
        </div>
        <svg
          className="c3"
          fill="none"
          height="32px"
          sx={
            {
              "height": "100%",
              "left": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c4"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c5"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            fill="currentColor"
            focusable="false"
            height={16}
            role="img"
            style={
              {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          >
            <path
              d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
            />
          </svg>
        </div>
        <svg
          className="c6"
          fill="none"
          height="32px"
          sx={
            {
              "height": "100%",
              "maxWidth": "100%",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c5 {
  visibility: hidden;
}

.c2 {
  visibility: visible;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: hidden;
  left: 0;
}

.c6 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  right: 0;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  --inner-action-size: 28px;
  padding-left: 8px;
  padding-right: 8px;
  padding-top: 10px;
  padding-bottom: 10px;
  height: 40px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 0;
}

.c4 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c4:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    className="c0 TextInput-wrapper"
    onClick={[Function]}
    size="large"
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c2"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            fill="currentColor"
            focusable="false"
            height={16}
            role="img"
            style={
              {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          >
            <path
              d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
            />
          </svg>
        </div>
        <svg
          className="c3"
          fill="none"
          height="32px"
          sx={
            {
              "height": "100%",
              "left": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "top": 0,
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c4"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c5"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            fill="currentColor"
            focusable="false"
            height={16}
            role="img"
            style={
              {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          >
            <path
              d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"
            />
          </svg>
        </div>
        <svg
          className="c6"
          fill="none"
          height="32px"
          sx={
            {
              "height": "100%",
              "maxWidth": "100%",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
]
`;

exports[`TextInput should render a password input 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #1F2328;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 > :not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #656d76;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="password"
    onBlur={[Function]}
    onFocus={[Function]}
    type="password"
  />
</span>
`;
