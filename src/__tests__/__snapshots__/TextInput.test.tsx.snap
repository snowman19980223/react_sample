// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput renders 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders block 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders consistently 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders contrast 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-color: #f6f8fa;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders error 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  border-color: #cf222e;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders large 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  padding-left: 8px;
  padding-right: 8px;
  padding-top: 10px;
  padding-bottom: 10px;
  font-size: 20px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
  size="large"
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders leadingVisual 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <span
    className="TextInput-icon"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-search"
      dangerouslySetInnerHTML={
        Object {
          "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
        }
      }
      fill="currentColor"
      height={16}
      role="img"
      style={
        Object {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 16 16"
      width={16}
    />
  </span>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
</span>
`;

exports[`TextInput renders monospace 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  font-family: SFMono-Regular,Consolas,"Liberation Mono",Menlo,Courier,monospace;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders placeholder 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="560076"
    type="text"
  />
</span>
`;

exports[`TextInput renders small 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  min-height: 28px;
  padding-left: 8px;
  padding-right: 8px;
  padding-top: 3px;
  padding-bottom: 3px;
  font-size: 12px;
  line-height: 20px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
  size="small"
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders trailingAction icon button 1`] = `
.c2 {
  margin: 4px;
}

.c3 {
  line-height: 1;
}

.c3:hover [data-component=tooltip],
.c3:focus-within [data-component=tooltip] {
  visibility: visible;
  opacity: 1;
}

.c5 {
  display: inline-block;
}

.c6 {
  visibility: hidden;
  opacity: 0;
  -webkit-transition: opacity 100ms ease-in;
  transition: opacity 100ms ease-in;
  -webkit-transition-delay: 400ms;
  transition-delay: 400ms;
  background-color: #24292f;
  color: #ffffff;
  border-radius: 3px;
  font-size: 12px;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 8px;
  padding-right: 8px;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  max-width: 250px;
  text-align: center;
  position: absolute;
  z-index: 2;
}

.c6:before {
  content: "";
  width: 0;
  height: 0;
  border: 5px solid transparent;
  position: absolute;
}

.c6[data-side=outside-top]::before {
  border-top: 5px solid;
  border-top-color: #24292f;
  top: 100%;
}

.c6[data-side=outside-bottom]::before {
  border-bottom: 5px solid;
  border-bottom-color: #24292f;
  top: -10px;
}

.c6[data-side=outside-left]::before {
  border-left: 5px solid;
  border-left-color: #24292f;
  top: calc(50% - 5px);
  left: 100%;
}

.c6[data-side=outside-right]::before {
  border-right: 5px solid;
  border-right-color: #24292f;
  top: calc(50% - 5px);
  left: -10px;
}

.c6[data-align=start][data-side=outside-top]::before,
.c6[data-align=start][data-side=outside-bottom]::before {
  left: 8px;
}

.c6[data-align=center][data-side=outside-top]::before,
.c6[data-align=center][data-side=outside-bottom]::before {
  left: calc(50% - 4px);
}

.c6[data-align=end][data-side=outside-top]::before,
.c6[data-align=end][data-side=outside-bottom]::before {
  left: calc(100% - 16px);
}

.c4 {
  border-radius: 6px;
  border: 0;
  border-color: rgba(27,31,36,0.15);
  font-family: inherit;
  font-weight: 600;
  line-height: 20px;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  padding-top: 2px;
  padding-bottom: 2px;
  padding-left: 4px;
  padding-right: 4px;
  font-size: 14px;
  color: #24292f;
  background-color: transparent;
  box-shadow: none;
  position: relative;
}

.c4:focus:not(:disabled) {
  box-shadow: none;
  outline: 2px solid #0969da;
  outline-offset: -2px;
}

.c4:focus:not(:disabled):not(:focus-visible) {
  outline: solid 1px transparent;
}

.c4:focus-visible:not(:disabled) {
  box-shadow: none;
  outline: 2px solid #0969da;
  outline-offset: -2px;
}

.c4:disabled {
  cursor: default;
  color: #8c959f;
}

.c4:disabled [data-component=ButtonCounter] {
  color: inherit;
}

.c4:disabled svg {
  opacity: 0.6;
}

.c4 [data-component=ButtonCounter] {
  font-size: 14px;
}

.c4:hover:not([disabled]) {
  background-color: #f3f4f6;
}

.c4:active:not([disabled]) {
  background-color: hsla(220,14%,94%,1);
}

.c4[aria-expanded=true] {
  background-color: hsla(220,14%,94%,1);
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (forced-colors:active) {
  .c4:focus {
    outline: solid 1px transparent;
  }
}

@media (pointer:coarse) {
  .c4:after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    top: 50%;
    min-height: 44px;
  }
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
  <span
    className="c2 TextInput-action"
  >
    <span
      className="c3"
    >
      <button
        aria-describedby="react-aria-1"
        aria-label="iconLabel"
        className="c4"
        onClick={[MockFunction]}
        type="button"
      >
        <span
          className="c5"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
              }
            }
            fill="currentColor"
            height={16}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          />
        </span>
      </button>
      <div
        aria-hidden={true}
        className="c6"
        data-component="tooltip"
        id="react-aria-1"
        role="tooltip"
      >
        iconLabel
      </div>
    </span>
  </span>
</span>
`;

exports[`TextInput renders trailingAction text button 1`] = `
.c2 {
  margin: 4px;
}

.c3 {
  border-radius: 6px;
  border: 0;
  border-color: rgba(27,31,36,0.15);
  font-family: inherit;
  font-weight: 600;
  line-height: 20px;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  display: grid;
  grid-template-areas: "leadingIcon text trailingIcon";
  padding-top: 2px;
  padding-bottom: 2px;
  padding-left: 4px;
  padding-right: 4px;
  font-size: 12px;
  color: #24292f;
  background-color: transparent;
  box-shadow: none;
  position: relative;
}

.c3:focus:not(:disabled) {
  box-shadow: none;
  outline: 2px solid #0969da;
  outline-offset: -2px;
}

.c3:focus:not(:disabled):not(:focus-visible) {
  outline: solid 1px transparent;
}

.c3:focus-visible:not(:disabled) {
  box-shadow: none;
  outline: 2px solid #0969da;
  outline-offset: -2px;
}

.c3:disabled {
  cursor: default;
  color: #8c959f;
}

.c3:disabled [data-component=ButtonCounter] {
  color: inherit;
}

.c3:disabled svg {
  opacity: 0.6;
}

.c3 > :not(:last-child) {
  margin-right: 8px;
}

.c3 [data-component="leadingIcon"] {
  grid-area: leadingIcon;
}

.c3 [data-component="text"] {
  grid-area: text;
}

.c3 [data-component="trailingIcon"] {
  grid-area: trailingIcon;
}

.c3 [data-component=ButtonCounter] {
  font-size: 12px;
}

.c3:hover:not([disabled]) {
  background-color: #f3f4f6;
}

.c3:active:not([disabled]) {
  background-color: hsla(220,14%,94%,1);
}

.c3[aria-expanded=true] {
  background-color: hsla(220,14%,94%,1);
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (forced-colors:active) {
  .c3:focus {
    outline: solid 1px transparent;
  }
}

@media (pointer:coarse) {
  .c3:after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    top: 50%;
    min-height: 44px;
  }
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
  <span
    className="c2 TextInput-action"
  >
    <button
      className="c3"
      onClick={[MockFunction]}
      size="small"
      type="button"
    >
      <span
        data-component="text"
      >
        Clear
      </span>
    </button>
  </span>
</span>
`;

exports[`TextInput renders trailingAction text button with a tooltip 1`] = `
.c2 {
  margin: 4px;
}

.c3 {
  line-height: 1;
}

.c3:hover [data-component=tooltip],
.c3:focus-within [data-component=tooltip] {
  visibility: visible;
  opacity: 1;
}

.c5 {
  visibility: hidden;
  opacity: 0;
  -webkit-transition: opacity 100ms ease-in;
  transition: opacity 100ms ease-in;
  -webkit-transition-delay: 400ms;
  transition-delay: 400ms;
  background-color: #24292f;
  color: #ffffff;
  border-radius: 3px;
  font-size: 12px;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 8px;
  padding-right: 8px;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  max-width: 250px;
  text-align: center;
  position: absolute;
  z-index: 2;
  display: inline-block;
}

.c5:before {
  content: "";
  width: 0;
  height: 0;
  border: 5px solid transparent;
  position: absolute;
}

.c5[data-side=outside-top]::before {
  border-top: 5px solid;
  border-top-color: #24292f;
  top: 100%;
}

.c5[data-side=outside-bottom]::before {
  border-bottom: 5px solid;
  border-bottom-color: #24292f;
  top: -10px;
}

.c5[data-side=outside-left]::before {
  border-left: 5px solid;
  border-left-color: #24292f;
  top: calc(50% - 5px);
  left: 100%;
}

.c5[data-side=outside-right]::before {
  border-right: 5px solid;
  border-right-color: #24292f;
  top: calc(50% - 5px);
  left: -10px;
}

.c5[data-align=start][data-side=outside-top]::before,
.c5[data-align=start][data-side=outside-bottom]::before {
  left: 8px;
}

.c5[data-align=center][data-side=outside-top]::before,
.c5[data-align=center][data-side=outside-bottom]::before {
  left: calc(50% - 4px);
}

.c5[data-align=end][data-side=outside-top]::before,
.c5[data-align=end][data-side=outside-bottom]::before {
  left: calc(100% - 16px);
}

.c4 {
  border-radius: 6px;
  border: 0;
  border-color: rgba(27,31,36,0.15);
  font-family: inherit;
  font-weight: 600;
  line-height: 20px;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  display: grid;
  grid-template-areas: "leadingIcon text trailingIcon";
  padding-top: 2px;
  padding-bottom: 2px;
  padding-left: 4px;
  padding-right: 4px;
  font-size: 12px;
  color: #24292f;
  background-color: transparent;
  box-shadow: none;
  position: relative;
}

.c4:focus:not(:disabled) {
  box-shadow: none;
  outline: 2px solid #0969da;
  outline-offset: -2px;
}

.c4:focus:not(:disabled):not(:focus-visible) {
  outline: solid 1px transparent;
}

.c4:focus-visible:not(:disabled) {
  box-shadow: none;
  outline: 2px solid #0969da;
  outline-offset: -2px;
}

.c4:disabled {
  cursor: default;
  color: #8c959f;
}

.c4:disabled [data-component=ButtonCounter] {
  color: inherit;
}

.c4:disabled svg {
  opacity: 0.6;
}

.c4 > :not(:last-child) {
  margin-right: 8px;
}

.c4 [data-component="leadingIcon"] {
  grid-area: leadingIcon;
}

.c4 [data-component="text"] {
  grid-area: text;
}

.c4 [data-component="trailingIcon"] {
  grid-area: trailingIcon;
}

.c4 [data-component=ButtonCounter] {
  font-size: 12px;
}

.c4:hover:not([disabled]) {
  background-color: #f3f4f6;
}

.c4:active:not([disabled]) {
  background-color: hsla(220,14%,94%,1);
}

.c4[aria-expanded=true] {
  background-color: hsla(220,14%,94%,1);
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (forced-colors:active) {
  .c4:focus {
    outline: solid 1px transparent;
  }
}

@media (pointer:coarse) {
  .c4:after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    top: 50%;
    min-height: 44px;
  }
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
  <span
    className="c2 TextInput-action"
  >
    <span
      className="c3"
    >
      <button
        aria-describedby="react-aria-1"
        className="c4"
        onClick={[MockFunction]}
        size="small"
        type="button"
      >
        <span
          data-component="text"
        >
          Clear
        </span>
      </button>
      <div
        aria-hidden={true}
        className="c5"
        data-component="tooltip"
        id="react-aria-1"
        role="tooltip"
      >
        Clear input
      </div>
    </span>
  </span>
</span>
`;

exports[`TextInput renders trailingVisual 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="search"
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Search"
    type="text"
  />
  <span
    className="TextInput-icon"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-search"
      dangerouslySetInnerHTML={
        Object {
          "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
        }
      }
      fill="currentColor"
      height={16}
      role="img"
      style={
        Object {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 16 16"
      width={16}
    />
  </span>
</span>
`;

exports[`TextInput renders warning 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
  border-color: #bf8700;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="zipcode"
    onBlur={[Function]}
    onFocus={[Function]}
    type="text"
  />
</span>
`;

exports[`TextInput renders with a loading indicator 1`] = `
Array [
  .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: visible;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    aria-live="polite"
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <input
      className="c1"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c2"
        display="flex"
      >
        <svg
          className="c3"
          fill="none"
          height="16px"
          sx={
            Object {
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 12px;
}

.c3 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c3:focus {
  outline: 0;
}

.c2 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: visible;
}

.c4 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: hidden;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    aria-live="polite"
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <svg
          className="c2"
          fill="none"
          height="16px"
          sx={
            Object {
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c3"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <svg
          className="c4"
          fill="none"
          height="16px"
          sx={
            Object {
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: visible;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    aria-live="polite"
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <input
      className="c1"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c2"
        display="flex"
      >
        <svg
          className="c3"
          fill="none"
          height="16px"
          sx={
            Object {
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c2 {
  visibility: hidden;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 12px;
}

.c4 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c4:focus {
  outline: 0;
}

.c5 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: hidden;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  left: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    aria-live="polite"
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c2"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
              }
            }
            fill="currentColor"
            height={16}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          />
        </div>
        <svg
          className="c3"
          fill="none"
          height="32px"
          sx={
            Object {
              "height": "100%",
              "left": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c4"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <svg
          className="c5"
          fill="none"
          height="16px"
          sx={
            Object {
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c2 {
  visibility: hidden;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 12px;
}

.c4 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c4:focus {
  outline: 0;
}

.c5 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: hidden;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  left: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    aria-live="polite"
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c2"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
              }
            }
            fill="currentColor"
            height={16}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          />
        </div>
        <svg
          className="c3"
          fill="none"
          height="32px"
          sx={
            Object {
              "height": "100%",
              "left": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c4"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <svg
          className="c5"
          fill="none"
          height="16px"
          sx={
            Object {
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c2 {
  visibility: visible;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 0;
}

.c4 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c4:focus {
  outline: 0;
}

.c5 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: visible;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: hidden;
  left: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    aria-live="polite"
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c2"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
              }
            }
            fill="currentColor"
            height={16}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          />
        </div>
        <svg
          className="c3"
          fill="none"
          height="32px"
          sx={
            Object {
              "height": "100%",
              "left": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "top": 0,
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c4"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <svg
          className="c5"
          fill="none"
          height="16px"
          sx={
            Object {
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c3 {
  visibility: hidden;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

.c4 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  right: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    aria-live="polite"
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <input
      className="c1"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c2"
        display="flex"
      >
        <div
          className="c3"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
              }
            }
            fill="currentColor"
            height={16}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          />
        </div>
        <svg
          className="c4"
          fill="none"
          height="32px"
          sx={
            Object {
              "height": "100%",
              "maxWidth": "100%",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c4 {
  visibility: visible;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 0;
}

.c3 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c3:focus {
  outline: 0;
}

.c2 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  visibility: visible;
}

.c5 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: hidden;
  right: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    aria-live="polite"
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <svg
          className="c2"
          fill="none"
          height="16px"
          sx={
            Object {
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="16px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c3"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c4"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
              }
            }
            fill="currentColor"
            height={16}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          />
        </div>
        <svg
          className="c5"
          fill="none"
          height="32px"
          sx={
            Object {
              "height": "100%",
              "maxWidth": "100%",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c3 {
  visibility: hidden;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 0;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

.c4 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  right: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    aria-live="polite"
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <input
      className="c1"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c2"
        display="flex"
      >
        <div
          className="c3"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
              }
            }
            fill="currentColor"
            height={16}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          />
        </div>
        <svg
          className="c4"
          fill="none"
          height="32px"
          sx={
            Object {
              "height": "100%",
              "maxWidth": "100%",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c2 {
  visibility: hidden;
}

.c5 {
  visibility: visible;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  min-height: 28px;
  padding-left: 8px;
  padding-right: 8px;
  padding-top: 3px;
  padding-bottom: 3px;
  font-size: 12px;
  line-height: 20px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 0;
}

.c4 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c4:focus {
  outline: 0;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  left: 0;
}

.c6 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: hidden;
  right: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    aria-live="polite"
    className="c0 TextInput-wrapper"
    onClick={[Function]}
    size="small"
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c2"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
              }
            }
            fill="currentColor"
            height={16}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          />
        </div>
        <svg
          className="c3"
          fill="none"
          height="32px"
          sx={
            Object {
              "height": "100%",
              "left": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c4"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c5"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
              }
            }
            fill="currentColor"
            height={16}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          />
        </div>
        <svg
          className="c6"
          fill="none"
          height="32px"
          sx={
            Object {
              "height": "100%",
              "maxWidth": "100%",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c2 {
  visibility: hidden;
}

.c5 {
  visibility: visible;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 0;
}

.c4 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c4:focus {
  outline: 0;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  left: 0;
}

.c6 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: hidden;
  right: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    aria-live="polite"
    className="c0 TextInput-wrapper"
    onClick={[Function]}
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c2"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
              }
            }
            fill="currentColor"
            height={16}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          />
        </div>
        <svg
          className="c3"
          fill="none"
          height="32px"
          sx={
            Object {
              "height": "100%",
              "left": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c4"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c5"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
              }
            }
            fill="currentColor"
            height={16}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          />
        </div>
        <svg
          className="c6"
          fill="none"
          height="32px"
          sx={
            Object {
              "height": "100%",
              "maxWidth": "100%",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
  .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c5 {
  visibility: hidden;
}

.c2 {
  visibility: visible;
}

.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  padding-left: 8px;
  padding-right: 8px;
  padding-top: 10px;
  padding-bottom: 10px;
  font-size: 20px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 12px;
  padding-right: 12px;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 0;
  padding-right: 0;
}

.c4 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c4:focus {
  outline: 0;
}

.c3 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: hidden;
  left: 0;
}

.c6 {
  -webkit-animation: rotate-keyframes 1s linear infinite;
  animation: rotate-keyframes 1s linear infinite;
  position: absolute;
  top: 0;
  height: 100%;
  max-width: 100%;
  visibility: visible;
  right: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
    aria-busy={true}
    aria-live="polite"
    className="c0 TextInput-wrapper"
    onClick={[Function]}
    size="large"
  >
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c2"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
              }
            }
            fill="currentColor"
            height={16}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          />
        </div>
        <svg
          className="c3"
          fill="none"
          height="32px"
          sx={
            Object {
              "height": "100%",
              "left": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "top": 0,
              "visibility": "hidden",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
    <input
      className="c4"
      data-component="input"
      onBlur={[Function]}
      onFocus={[Function]}
      type="text"
    />
    <span
      className="TextInput-icon"
    >
      <div
        className="c1"
        display="flex"
      >
        <div
          className="c5"
        >
          <svg
            aria-hidden="true"
            className="octicon octicon-search"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<path fill-rule=\\"evenodd\\" d=\\"M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z\\"></path>",
              }
            }
            fill="currentColor"
            height={16}
            role="img"
            style={
              Object {
                "display": "inline-block",
                "overflow": "visible",
                "userSelect": "none",
                "verticalAlign": "text-bottom",
              }
            }
            viewBox="0 0 16 16"
            width={16}
          />
        </div>
        <svg
          className="c6"
          fill="none"
          height="32px"
          sx={
            Object {
              "height": "100%",
              "maxWidth": "100%",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "visible",
            }
          }
          viewBox="0 0 16 16"
          width="32px"
        >
          <circle
            cx="8"
            cy="8"
            r="7"
            stroke="currentColor"
            strokeOpacity="0.25"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
          <path
            d="M15 8a7.002 7.002 0 00-7-7"
            stroke="currentColor"
            strokeLinecap="round"
            strokeWidth="2"
            vectorEffect="non-scaling-stroke"
          />
        </svg>
      </div>
    </span>
  </span>,
]
`;

exports[`TextInput should render a password input 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  color: #24292f;
  vertical-align: middle;
  background-color: #ffffff;
  border: 1px solid #d0d7de;
  border-radius: 6px;
  outline: none;
  box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  min-height: 32px;
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-left: 0;
  padding-right: 0;
}

.c0 input,
.c0 textarea {
  cursor: text;
}

.c0 select {
  cursor: pointer;
}

.c0::-webkit-input-placeholder {
  color: #6e7781;
}

.c0::-moz-placeholder {
  color: #6e7781;
}

.c0:-ms-input-placeholder {
  color: #6e7781;
}

.c0::placeholder {
  color: #6e7781;
}

.c0:focus-within {
  border-color: #0969da;
  outline: none;
  box-shadow: inset 0 0 0 1px #0969da;
}

.c0 > textarea {
  padding: 12px;
}

.c0 >:not(:last-child) {
  margin-right: 8px;
}

.c0 .TextInput-icon,
.c0 .TextInput-action {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  color: #57606a;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > input,
.c0 > select {
  padding-left: 12px;
  padding-right: 12px;
}

.c1 {
  border: 0;
  font-size: inherit;
  font-family: inherit;
  background-color: transparent;
  -webkit-appearance: none;
  color: inherit;
  width: 100%;
}

.c1:focus {
  outline: 0;
}

@media (min-width:768px) {
  .c0 {
    font-size: 14px;
  }
}

<span
  aria-busy={false}
  aria-live="polite"
  className="c0 TextInput-wrapper"
  onClick={[Function]}
>
  <input
    className="c1"
    data-component="input"
    name="password"
    onBlur={[Function]}
    onFocus={[Function]}
    type="password"
  />
</span>
`;
